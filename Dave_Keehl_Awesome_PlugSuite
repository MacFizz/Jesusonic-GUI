// Copyright 2006, Thomas Scott Stillwell
// All rights reserved.
//
//Redistribution and use in source and binary forms, with or without modification, are permitted
//provided that the following conditions are met:
//
//Redistributions of source code must retain the above copyright notice, this list of conditions
//and the following disclaimer.
//
//Redistributions in binary form must reproduce the above copyright notice, this list of conditions
//and the following disclaimer in the documentation and/or other materials provided with the distribution.
//
//The name of Thomas Scott Stillwell may not be used to endorse or
//promote products derived from this software without specific prior written permission.
//
//THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR
//IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND
//FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS
//BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
//(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
//PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
//STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
//THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

desc:Dave Keehl Awesome PlugSuite

//desc:1175 Compressor
//desc:1175 FAST Attack Compressor with Program-Dependent Release [Stillwell]
//tags: dynamics compressor

import dkaps.jsfx-inc
import swipe.jsfx-inc
import macfizz-gui.jsfx-inc

//1175 compressor
slider1:0<-60,0,0.1>-Threshold (dB)
slider2:1<0,3,1{4,8,12,20,All}>-Ratio
slider3:0<-20,20,0.1>-Gain (dB)
slider4:20<20,2000,10>-Attack (Ã©s)
slider5:250<20,1000,1>-Release (ms)
slider6:100<0,100,0.1>-Mix (%)
slider9:1<0,1,1{Off,On}>-1175

//Bad bus mojo
slider11:0<-60,0,0.01>-Pos Threshold (dB)
slider12:0<-60,0,0.01>-Neg Threshold (dB)
slider13:1<1,2,0.001>-Pos Nonlinearity
slider14:1<1,2,0.001>-Neg Nonlinearity
slider15:0<0,6,0.01>-Pos Knee (dB)
slider16:0<0,6,0.01>-Neg Knee (dB)
slider17:0<0,100,0.1>-Mod A
slider18:0<0,100,0.1>-Mod B
slider19:0<0,1,1{Off,On}>-Bad Bus Mojo

slider20:10<.5,50,.1>-Vu meter Balistics

//Channel delayer
slider21:0<-100,100,1>-Delay L (ms)
slider22:0<-100,100,1>-Delay R (ms)
slider25:0<0,1,1{Off,On}>-Channel Delayer

//Transient controller
slider26:0<-100,100,1>-Attack (%)
slider27:0<-100,100,1>-Sustain (%)
slider28:0<-12,6,.1>-Output (dB)
slider29:0<0,1,1{Off,On}>-Transient Controller

//Stereo Enhancer
slider31:100<0,200,1>-Width Low (%)
slider32:500<0,20000,1>-Crossover (Hz)
slider33:100<0,200,1>-Width High (%)
slider35:0<0,1,1{Off,On}>-Stereo Enhancer

//Saturation
slider36:0<0,100,1>-Amount (%)
slider39:1<0,1,1{Off,On}>-Saturation

in_pin:L in
in_pin:R in
out_pin:L out
out_pin:R out

@init
  log2db = 8.6858896380650365530225783783321; // 20 / ln(10)
  db2log = 0.11512925464970228420089957273422; // ln(10) / 20
  pi = 3.1415926535;
  halfpi = pi / 2;
  cDenorm = 10^-30;
  co.init_co1175();
  tc.init_tc();

  function uncheckbox()(
      cbr4.checked=0;
      cbr8.checked=0;
      cbr12.checked=0;
      cbr20.checked=0;
      cbrall.checked=0;
    );

  cbr4.noglow=1;
  cbr8.noglow=1;
  cbr12.noglow=1;
  cbr20.noglow=1;
  cbrall.noglow=1;

//1175
  kb_1175tresh.init_knob(1,"Treshold","dB",-60,0,1,.5,.5,1);
  kb_1175gain.init_knob(3,"Gain","dB",-20,20,1,1,.7,.7);
  kb_1175attack.init_knob(4,"Attack","ms",20,2000,0,.5,.5,.5);
  kb_1175release.init_knob(5,"Release","ms",20,1000,0,.5,.5,.5);
  kb_1175mix.WidgetInit(6, 0, 100, "Mix", "%");
  cb9.checked=slider9;
  knob20.init_knob(20,"","",.5,50,1,.5,.5,.5);
  knob20.novalue=1;
  knob20.bias=2;
  cov.no_origfx=1;

//bbmj
  vsd_bbmjpostresh.WidgetInit(11, -60, 0, "+", "dB");
  vsd_bbmjnegtresh.WidgetInit(12, -60, 0, "-", "dB");
  vsd_bbmjposnonlin.WidgetInit(13, 1, 2, "+", "");
  vsd_bbmjnegnonlin.WidgetInit(14, 1, 2, "-", "");
  vsd_bbmjposknee.WidgetInit(15, 0, 6, "+", "dB");
  vsd_bbmjnegknee.WidgetInit(16, 0, 6, "-", "dB");
  vsd_bbmjmoda.WidgetInit(17, 0, 100, "A", "");
  vsd_bbmjmodb.WidgetInit(18, 0, 100, "B", "");
  cb19.checked=slider19;

//chdly
  hsd_chdlyL.WidgetInit(21, -100, 100, "Left", "ms");
  hsd_chdlyR.WidgetInit(22, -100, 100, "Right", "ms");
  cb25.checked=slider25;

//TC
  kb_tcattack.init_knob(26,"Attack","%",-100,100,0,.5,.5,.5);
  kb_tcsustain.init_knob(27,"Sustain","%",-100,100,0,.5,.5,.5);
  kb_tcoutput.init_knob(28,"Output","dB",-12,6,1,1,.7,.7);
  cb29.checked=slider29;

//steh
  kb_stehWlow.init_knob(31,"Width Low","%",0,200,0,.5,.5,.5);
  hsd_stehcx.WidgetInit(32, 0, 20000, "", "Hz");
  kb_stehWhigh.init_knob(33,"Width High","%",0,200,0,.5,.5,.5);
  cb35.checked=slider35;

//Saturation
  kb_sat.init_knob(36,"Amount","%",0,100,0,1,.5,.5);
  cb39.checked=slider39;

@slider

  SWIPE.WidgetChanged = TRUE;

@sample
SWIPE.WidgetChanged ? ( SWIPE.WidgetChanged = FALSE;
  slider9 ? co.set_co1175(slider1,slider2,slider3,slider4,slider5,slider6);
  slider19 ? bbmj.set_bbmj(slider11,slider12,slider13,slider14,slider15,slider16,slider17,slider18);
  slider25 ? chdly.set_chdly(slider21,slider22);
  slider29 ? tc.set_tc(slider26, slider27, slider28);
  slider35 ? steh.set_steh(slider31, slider32,slider33);
  slider39 ? sat.set_sat(slider36);
);


  spl0 || spl1 != 0 ?(playing=1):(playing=0);
  comp=slider9;
  bbmj=slider19;
  chdly=slider25;
  tc=slider29;
  steh=slider35;
  sat=slider39;

  playing ? (
    comp ? (
      co.do_co1175(spl0,spl1);
      spl0=co.co1175_outL;
      spl1=co.co1175_outR;
    );

    bbmj ? (
      bbmj.do_bbmj(spl0,spl1);
      spl0=bbmj.bbmj_outL;
      spl1=bbmj.bbmj_outR;
    );

    chdly ? (
      chdly.do_chdly(spl0,spl1);
      spl0=chdly.chdly_outL;
      spl1=chdly.chdly_outR;
    ):(
      pdc_delay = 0;
      pdc_bot_ch=0; pdc_top_ch=2;
    );

    tc ? (
      tc.do_tc(spl0,spl1);
      spl0=tc.tc_outL;
      spl1=tc.tc_outR;
    );

    steh ? (
      steh.do_steh(spl0,spl1);
      spl0=steh.steh_outL;
      spl1=steh.steh_outR;
    );

    sat ? (
      sat.do_sat(spl0,spl1);
      spl0=sat.sat_outL;
      spl1=sat.sat_outR;
    );
  );

@gfx 550 645 // request horizontal/vertical heights (0 means dont care)

SWIPE(gfx_w, gfx_h) ?
(
  _effect.EffectBasic("Dave Keehl's Awesome PlugSuite", "License LGPL / Copyright (C) 2018 Joanny Krafft");

  w = 60;
  h = 70;
  //x = (gfx_w - w * 5) * 0.5;
  module_x=20;
  module_y = 65;
  x=y=0;

  GfxDrawRect3D(module_x,module_y-5,module_x+5*w,module_y+h+5,1);

  cb9.titleR=1;
  slider9 = cb9.draw_chkbox(module_x,module_y-25,10,"Stillwell's 1175 Compressor",1);

  kb_1175tresh.draw_pot(module_x+x,module_y+y,w,slider1);
  kb_1175tresh.process_knob();
  x+=w;

  cbr4.draw_chkbox(module_x+w+35,module_y+10,10,"4",5);
  cbr4.checked ? (
    slider2=0;
    uncheckbox();
    cbr4.checked=1;
  );

  cbr8.draw_chkbox(module_x+w+35,module_y+20,10,"8",5);
  cbr8.checked ? (
    slider2=1;
    uncheckbox();
    cbr8.checked=1;
  );
  cbr12.draw_chkbox(module_x+w+35,module_y+30,10,"12",5);
  cbr12.checked ? (
    slider2=2;
    uncheckbox();
    cbr12.checked=1;
  );
  cbr20.draw_chkbox(module_x+w+35,module_y+40,10,"20",5);
  cbr20.checked ? (
    slider2=3;
    uncheckbox();
    cbr20.checked=1;
  );
  cbrall.draw_chkbox(module_x+w+35,module_y+50,10,"all",5);
  cbrall.checked ? (
    slider2=4;
    uncheckbox();
    cbrall.checked=1;
  );

  cbratio=slider2;
  cbratio == 0 ?(cbr4.checked=1;cbr8.checked=0;cbr12.checked=0;cbr20.checked=0;cbrall.checked=0;);
  cbratio == 1 ?(cbr4.checked=0;cbr8.checked=1;cbr12.checked=0;cbr20.checked=0;cbrall.checked=0;);
  cbratio == 2 ?(cbr4.checked=0;cbr8.checked=0;cbr12.checked=1;cbr20.checked=0;cbrall.checked=0;);
  cbratio == 3 ?(cbr4.checked=0;cbr8.checked=0;cbr12.checked=0;cbr20.checked=1;cbrall.checked=0;);
  cbratio == 4 ?(cbr4.checked=0;cbr8.checked=0;cbr12.checked=0;cbr20.checked=0;cbrall.checked=1;
    gfx_rect(module_x+w+37,module_y+12,6,36);
  );
  x+=w;
  kb_1175gain.draw_pot(module_x+x,module_y+y,w,slider3);
  kb_1175gain.process_knob();
  x+=w;
  kb_1175attack.draw_pot(module_x+x,module_y+y,w,slider4);
  kb_1175attack.process_knob();
  x+=w;
  kb_1175release.draw_pot(module_x+x,module_y+y,w,slider5);
  kb_1175release.process_knob();
  x+=w;
  kb_1175mix.SliderHorzCall(module_x-w, module_y+h+15, module_x+5*w, module_y+h+25);

  //1175
      co.meter_x=module_x + 5*w+10;
      co.meter_y=module_y-5;
      co.meter_w=195;
      co.vu_h=100;
      cov.vu_meter_b=slider20;
      cov.vu_grmeter(co.meter_x,co.meter_y,co.meter_w,co.vu_h,co.gr);
      knob20.draw_pot(co.meter_x+co.meter_w/2-40/2,co.meter_y+co.vu_h-30,40,slider20);
      knob20.process_knob();

  gfx_r=gfx_g=gfx_b=0;
  gfx_line(module_x-9,module_y+h+35,gfx_w-12,module_y+h+35);

  //BBMJ
  module_x=module_x+20;
  module_y=module_y+h+75;
  vsd_w=12;
  w=65;
  cb19.titleR=1;
  slider19 = cb19.draw_chkbox(module_x-20,module_y-30,10,"Bad Bus Mojo",1);
  GfxDrawRect3D(module_x-20,module_y-15,module_x+1.5*w,module_y+h*2+5,1);
  gfx_x=(module_x+2*w)/2-strlen("Treshold")-25;
  gfx_y=module_y-10;
  gfx_drawstr("Treshold");
  vsd_bbmjpostresh.SliderVertCall(module_x, module_y, module_x+vsd_w, module_y+h*2);
  vsd_bbmjnegtresh.SliderVertCall(module_x+w, module_y, module_x+w+vsd_w, module_y+h*2);
  GfxDrawRect3D(module_x+1.5*w+10,module_y-15,module_x+3.5*w,module_y+h*2+5,1);
  gfx_x=module_x+w+(module_x+2*w)/2-strlen("Nonlinearity")-5;
  gfx_y=module_y-10;
  gfx_drawstr("Nonlinearity");
  vsd_bbmjposnonlin.SliderVertCall(module_x+w*2, module_y, module_x+w*2+vsd_w, module_y+h*2);
  vsd_bbmjnegnonlin.SliderVertCall(module_x+w*3, module_y, module_x+w*3+vsd_w, module_y+h*2);
  GfxDrawRect3D(module_x+3.5*w+10,module_y-15,module_x+5.5*w,module_y+h*2+5,1);
  gfx_x=module_x+3*w+10+(module_x+2*w)/2-strlen("Knee")-5;
  gfx_y=module_y-10;
  gfx_drawstr("Knee");
  vsd_bbmjposknee.SliderVertCall(module_x+w*4, module_y, module_x+w*4+vsd_w, module_y+h*2);
  vsd_bbmjnegknee.SliderVertCall(module_x+w*5, module_y, module_x+w*5+vsd_w, module_y+h*2);
  GfxDrawRect3D(module_x+5.5*w+10,module_y-15,module_x+7.5*w,module_y+h*2+5,1);
  //gfx_x=module_x+6*w;
  gfx_x=module_x+5*w+10+(module_x+2*w)/2-strlen("Mod")-5;
  gfx_y=module_y-10;
  gfx_drawstr("Mod");
  vsd_bbmjmoda.SliderVertCall(module_x+w*6, module_y, module_x+w*6+vsd_w, module_y+h*2);
  vsd_bbmjmodb.SliderVertCall(module_x+w*7, module_y, module_x+w*7+vsd_w, module_y+h*2);

  //Channel Delayer
  module_x=20;
  module_y=module_y+h*2+60;
  gfx_r=gfx_g=gfx_b=0;
  gfx_line(module_x-9,module_y-45,gfx_w-12,module_y-45);
  hsd_h=15;
  hsd_pad=h-hsd_h*2;
  hsd_w=345;
  cb25.titleR=1;
  slider25 = cb25.draw_chkbox(module_x,module_y-30,10,"Channel Delayer",1);
  gfxDrawRect3D(module_x,module_y-15,hsd_w-5,module_y+hsd_pad+hsd_h*2,1);
  module_x=0;
  hsd_chdlyL.SliderHorzCall(module_x-50,module_y,module_x+hsd_w,module_y+hsd_h);
  hsd_chdlyR.SliderHorzCall(module_x-50,module_y+hsd_h+hsd_pad/2,module_x+hsd_w,module_y+hsd_pad/2+hsd_h*2);
  //kb_1175mix.SliderHorzCall(module_x, module_y, module_x+5*w, module_y+15);

  //Transient Controller
  w=60;
  module_y=60+h*5;
  module_x=345;
  cb29.titleR=1;
  slider29 = cb29.draw_chkbox(module_x,module_y-30,10,"Transient Controller",1);
  gfxDrawRect3D(module_x,module_y-15,module_x+w*3,module_y+70,1);
  module_y=50+h*5;
  kb_tcattack.draw_pot(module_x,module_y,w,slider26);
  kb_tcattack.process_knob();
  module_x=module_x+w;
  kb_tcsustain.draw_pot(module_x,module_y,w,slider27);
  kb_tcsustain.process_knob();
  module_x=module_x+w;
  kb_tcoutput.draw_pot(module_x,module_y,w,slider28);
  kb_tcoutput.process_knob();

  //Stereo Enhancer
  w=60;
  module_y=40+h*7;
  module_x=20;
  hsd_h=20;
  gfx_r=gfx_g=gfx_b=0;
  gfx_line(module_x-9,module_y-45,gfx_w-12,module_y-45);
  cb35.titleR=1;
  slider35 = cb35.draw_chkbox(module_x,module_y-30,10,"Stereo Enhancer",1);
  gfxDrawRect3D(module_x,module_y-15,module_x+w+hsd_w+30,module_y+70,1);
  module_y=30+h*7;
  kb_stehWlow.draw_pot(module_x,module_y,w,slider31);
  kb_stehWlow.process_knob();
  hsd_stehcx.SliderHorzCall(module_x-30,module_y+25,module_x+hsd_w,module_y+25+hsd_h);
  module_x=module_x+hsd_w;
  kb_stehWhigh.draw_pot(module_x,module_y,w,slider33);
  kb_stehWhigh.process_knob();

  //Saturation
  module_x=460;
  module_y=40+h*7;
  gfxDrawRect3D(module_x,module_y-15,module_x+w+5,module_y+70,1);
  cb39.titleR=1;
  slider39 = cb39.draw_chkbox(module_x,module_y-30,10,"Saturation",1);
  module_y=30+h*7;
  kb_sat.r=.5+.5/100*slider36;
  //kb_sat.g=kb_sat.b=kb_sat.r-.3;
  kb_sat.draw_pot(module_x,module_y,w,slider36);
  kb_sat.process_knob();

  mouse_wheel=0;

  _effect.EffectDone();
);
